{
  "compilerOptions": {
    // "composite": true,                  /* REMOVED - Not using project references for this build */
    "target": "ES2016",                     /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "CommonJS",                  /* Using CommonJS for backend runtime */
    "outDir": "./dist",                    /* Specify an output folder for all emitted files. */
    "rootDir": ".",                        /* RootDir is the current directory (/build_context/backend) */
    "baseUrl": ".",                        /* Keep baseUrl relative to this tsconfig location */
    "paths": {                             /* Keep paths relative to this tsconfig location */
      "types": ["./src/types/index"],      /* Map 'types' alias relative to baseUrl (./backend/src/types) */
      "types/*": ["./src/types/*"]         /* Map 'types/*' alias relative to baseUrl */
    },
    "strict": true,                        /* Enable all strict type-checking options. */
    "esModuleInterop": true,               /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "skipLibCheck": true,                  /* Skip type checking all .d.ts files. */
    "forceConsistentCasingInFileNames": true,/* Ensure that casing is correct in imports. */
    "moduleResolution": "node",            /* Standard Node resolution */
    "resolveJsonModule": true,             /* Enable importing .json files */
    "sourceMap": true                      /* Create source map files for emitted JavaScript files. */
  },
  // Include pattern relative to the rootDir ('.')
  "include": ["src/**/*"],                 /* Include backend source relative to /build_context/backend */
  "exclude": ["node_modules", "**/*.spec.ts"] /* Specifies an array of filenames or patterns that should be skipped when resolving include. */
  // "references": []                      /* REMOVED - Not using project references */
}
