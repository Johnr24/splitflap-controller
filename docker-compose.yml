services:
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      # No build args needed if socketService connects relatively
    ports:
      # Map host port 8080 to container port 80 (Nginx)
      # Access frontend via http://localhost:8080
      - "8080:80"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - backend # Ensures backend starts before frontend attempts connection
    networks:
      - splitflap-net
    container_name: splitflap-frontend # Optional: Assign a specific container name

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    expose:
      - "3001"
    ports:
      - "127.0.0.1:3001:3000" # For debugging - access backend directly
    networks:
      splitflap-net:
        aliases:
          - backend # Ensure this hostname is accessible in the network
    # Add healthcheck to ensure the service is running properly
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    env_file:
      # Load environment variables from .env file in root directory
      - .env
    environment:
      - SPLITFLAP_DISPLAY_LENGTH=${SPLITFLAP_DISPLAY_LENGTH:-12}
    volumes:
      # Mount scenes directory for persistence and easy editing
      - ./backend/scenes:/app/scenes
      # Optional: Mount logs directory if your app writes logs to a specific folder
      # - ./backend/logs:/app/logs
    restart: unless-stopped
    container_name: splitflap-backend # Optional: Assign a specific container name

networks:
  splitflap-net:
    driver: bridge
