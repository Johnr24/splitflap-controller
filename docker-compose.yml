services:
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      # No build args needed if socketService connects relatively
    ports:
      # Map host port 8080 to container port 80 (Nginx)
      # Access frontend via http://localhost:8080
      - "2001:80"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      backend: # Ensures backend starts before frontend attempts connection
        condition: service_healthy
      mqtt:
        condition: service_started # Or service_healthy if mqtt has a healthcheck
    networks:
      - splitflap-net
    container_name: splitflap-frontend # Optional: Assign a specific container name

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    expose:
      - "2001"
    networks:
      splitflap-net:
        aliases:
          - backend # Ensure this hostname is accessible in the network
    # Add healthcheck to ensure the service is running properly
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://backend:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    env_file:
      # Load environment variables from .env file in root directory
      - .env
    environment:
      - SPLITFLAP_DISPLAY_LENGTH=${SPLITFLAP_DISPLAY_LENGTH:-12}
    volumes:
      # Mount scenes directory for persistence and easy editing
      - ./backend/scenes:/app/scenes
      # Optional: Mount logs directory if your app writes logs to a specific folder
      # - ./backend/logs:/app/logs
    restart: unless-stopped
    container_name: splitflap-backend # Optional: Assign a specific container name
    depends_on:
      mqtt:
        condition: service_started # Or service_healthy if you add a healthcheck to mqtt

  mqtt:
    image: emqx/emqx:latest # Using latest EMQX image
    container_name: splitflap-emqx
    ports:
      - "1883:1883"    # MQTT
      - "8083:8083"    # MQTT over WebSockets
      - "8084:8084"    # MQTT over SSL/TLS WebSockets
      - "8883:8883"    # MQTT over SSL/TLS
      - "18083:18083"  # EMQX Dashboard
    volumes:
      - ./emqx/data:/opt/emqx/data
      - ./emqx/log:/opt/emqx/log
      # - ./emqx/etc:/opt/emqx/etc # Uncomment to persist configuration
    environment:
      EMQX_LOADED_PLUGINS: "emqx_dashboard,emqx_management" # Ensure dashboard is enabled
    networks:
      - splitflap-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx_ctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s # EMQX can take a bit to start

networks:
  splitflap-net:
    driver: bridge
